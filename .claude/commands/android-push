#!/bin/bash

# Android Build and Release Script for Weeki App
# Usage: android-push [version]

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Android Build and Release Script${NC}"
echo "=================================="

# Check if we're in the right directory
if [ ! -d "android" ]; then
    echo -e "${RED}‚ùå Error: android directory not found. Run this from the project root.${NC}"
    exit 1
fi

# Get current build version from build.gradle
CURRENT_BUILD_VERSION=$(grep -o 'versionCode [0-9]*' android/app/build.gradle | grep -o '[0-9]*')
NEW_BUILD_VERSION=$((CURRENT_BUILD_VERSION + 1))

echo -e "${YELLOW}üìù Current build version: $CURRENT_BUILD_VERSION${NC}"
echo -e "${YELLOW}üìù New build version: $NEW_BUILD_VERSION${NC}"

# Get version parameter or prompt for it
if [ -n "$1" ]; then
    VERSION="$1"
else
    echo -e "${YELLOW}üìù Current version in app.json:${NC}"
    grep -o '"version": "[^"]*"' app.json
    echo ""
    read -p "Enter new version (or press Enter to keep current): " VERSION
fi

# Update build version in build.gradle
echo -e "${YELLOW}üìù Updating build version to $NEW_BUILD_VERSION...${NC}"
sed -i.bak "s/versionCode $CURRENT_BUILD_VERSION/versionCode $NEW_BUILD_VERSION/" android/app/build.gradle

# Update version if provided
if [ -n "$VERSION" ]; then
    echo -e "${YELLOW}üìù Updating version name to $VERSION...${NC}"
    
    # Update app.json
    sed -i.bak "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" app.json
    
    # Update package.json
    sed -i.bak "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" package.json
    
    # Update build.gradle versionName
    sed -i.bak "s/versionName \"[^\"]*\"/versionName \"$VERSION\"/" android/app/build.gradle
    
    echo -e "${GREEN}‚úÖ Version updated to $VERSION${NC}"
fi

echo -e "${GREEN}‚úÖ Build version updated to $NEW_BUILD_VERSION${NC}"

# Navigate to android directory
cd android

echo -e "${YELLOW}üèóÔ∏è  Building AAB bundle...${NC}"
./gradlew bundleRelease

# Check if build was successful
if [ $? -eq 0 ]; then
    AAB_PATH="app/build/outputs/bundle/release/app-release.aab"
    AAB_SIZE=$(ls -lh "$AAB_PATH" | awk '{print $5}')
    
    echo -e "${GREEN}‚úÖ Build successful!${NC}"
    echo -e "${GREEN}üì¶ AAB Bundle: $AAB_PATH${NC}"
    echo -e "${GREEN}üìè Size: $AAB_SIZE${NC}"
    echo -e "${GREEN}üî¢ Build Version: $NEW_BUILD_VERSION${NC}"
    if [ -n "$VERSION" ]; then
        echo -e "${GREEN}üìã Version Name: $VERSION${NC}"
    fi
    echo ""
    echo -e "${YELLOW}üìã Next steps:${NC}"
    echo "1. Upload the AAB to Google Play Console"
    echo "2. Test the release in internal testing"
    echo "3. Promote to production when ready"
    echo ""
    echo -e "${GREEN}üéâ Ready for Google Play Store upload!${NC}"
else
    echo -e "${RED}‚ùå Build failed!${NC}"
    exit 1
fi